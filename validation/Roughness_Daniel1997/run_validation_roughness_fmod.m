clc;clear all; close all;

%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  This routine plot the validation of DW roughness code for 100% AM tones
%  at different frequencies in dependence of the modulation frequency
%   
%   - inputs loaded: The reference data is is taken from jury-test from the paper (FIG3):
%     Daniel, Peter, and Reinhard Weber. "Psychoacoustical roughness: Implementation of an optimized model." Acta Acustica united with Acustica 83.1 (1997): 113-123.
%   
%   - The signals are generated by the <make_AM_fmod.m> function. The signals are
%     AM tones with different carrier frequencies (md=1 and L=60dB) as a function of fmod
%
%   Gil Greco, Braunschweig, 21/02/2020 (updated 10.09.2023)
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

save_figs=0; %% save figs flag

%% load  reference data

load  fmod_125hz
load  fmod_250hz
load  fmod_500hz
load  fmod_1khz
load  fmod_2khz
load  fmod_4khz
load  fmod_8khz

%% generate signals to compute roughness (.mat variables in time [s] x sound pressure [Pa] (all with fs=48 kHz)

% variable s_125hz
fc=125;
s_125hz = make_AM_fmod(fc);

% variable s_250hz
fc=250;
s_250hz = make_AM_fmod(fc);

% variable s_500hz
fc=500;
s_500hz = make_AM_fmod(fc);

% variable s_1khz
fc=1000;
s_1khz = make_AM_fmod(fc);

% variable s_2khz
fc=2000;
s_2khz = make_AM_fmod(fc);

% variable s_4khz
fc=4000;
s_4khz = make_AM_fmod(fc);

% variable s_8khz
fc=8000;
s_8khz = make_AM_fmod(fc);

%% compute roughness from signals

fs=48e3;

% signal with fc=125 hz
res_125hz=cell(1,size(s_125hz,1));  % declaring for memory allocation

tic
for i=1:size(s_125hz,1)
res_125hz{i} = Roughness_Daniel1997(s_125hz(i,:)',fs,0,false);
end
t_125=toc;

% signal with fc=250 hz
res_250hz=cell(1,size(s_250hz,1));  % declaring for memory allocation

tic
for i=1:size(s_250hz,1)
res_250hz{i} = Roughness_Daniel1997(s_250hz(i,:)',fs,0,false);
end
t_250=toc;

% signal with fc=500 hz
res_500hz=cell(1,size(s_500hz,1));  % declaring for memory allocation

tic
for i=1:size(s_500hz,1)
res_500hz{i} = Roughness_Daniel1997(s_500hz(i,:)',fs,0,false);
end
t_500=toc;

% signal with fc=1 khz
res_1khz=cell(1,size(s_1khz,1));  % declaring for memory allocation

tic
for i=1:size(s_1khz,1)
res_1khz{i} = Roughness_Daniel1997(s_1khz(i,:)',fs,0,false);
end
t_1khz=toc;

% signal with fc=2 khz
res_2khz=cell(1,size(s_2khz,1));  % declaring for memory allocation

tic
for i=1:size(s_2khz,1)
res_2khz{i} = Roughness_Daniel1997(s_2khz(i,:)',fs,0,false);
end
t_2khz=toc;

% signal with fc=4 khz
res_4khz=cell(1,size(s_4khz,1));  % declaring for memory allocation

tic
for i=1:size(s_4khz,1)
res_4khz{i} = Roughness_Daniel1997(s_4khz(i,:)',fs,0,false);
end
t_4khz=toc;

% signal with fc=8 khz
res_8khz=cell(1,size(s_8khz,1));  % declaring for memory allocation

tic
for i=1:size(s_8khz,1)
res_8khz{i} = Roughness_Daniel1997(s_8khz(i,:)',fs,0,false);
end
t_8khz=toc;

t_calculation=(t_125+t_250+t_500+t_1khz+t_2khz+t_4khz+t_8khz)./60; % total time to compute roughness

%% store mean roughness value in vector results[nfmod,nFc] 

% format - results_125hz[1,fmod=0:10:100]
for i=1:size(s_125hz,1)
results_125hz(i)=res_125hz{1,i}.Rmean;
end

% format - results_250hz[1,fmod=0:10:130]
for i=1:size(s_250hz,1)
results_250hz(i)=res_250hz{1,i}.Rmean;
end

% format - results_500hz[1,fmod=0:10:160]
for i=1:size(s_500hz,1)
results_500hz(i)=res_500hz{1,i}.Rmean;
end

% format - results_1khz[1,fmod=0:10:160]
for i=1:size(s_1khz,1)
results_1khz(i)=res_1khz{1,i}.Rmean;
end

% format - results_2khz[1,fmod=0:10:160]
for i=1:size(s_2khz,1)
results_2khz(i)=res_2khz{1,i}.Rmean;
end

% format - results_4khz[1,fmod=0:10:160]
for i=1:size(s_4khz,1)
results_4khz(i)=res_4khz{1,i}.Rmean;
end

% format - results_8khz[1,fmod=0:10:160]
for i=1:size(s_8khz,1)
results_8khz(i)=res_8khz{1,i}.Rmean;
end

%% saving results so is not need to run roughness calculation again

save Rmean_results  res_125hz res_250hz res_500hz res_1khz res_2khz res_4khz res_8khz
% load Rmean_results

%% plot 125 Hz and 500 Hz
h  =figure;
set(h,'Units','Inches');
pos = get(h,'Position');
set(h,'PaperPositionMode','Auto','PaperUnits','Inches','PaperSize',[pos(3), pos(4)])

% plot reference curves
fmod_125=20:10:100;  % modulation freq vector for reference values 
fmod=20:10:160;  % modulation freq vector for reference values 

plot(fmod_125,fmod_125hz,'k-*','MarkerSize',6);hold all;
plot(fmod,fmod_500hz,'b-*','MarkerSize',6);hold all;

% plot computed results
fmod_125_computed=0:10:100;  % modulation freq vector for reference values 
fmod_computed=0:10:160;      % modulation freq vector for reference values 

plot(fmod_125_computed,results_125hz(1:11),'ko:','MarkerSize',8);hold all;
plot(fmod_computed,results_500hz,'bo:','MarkerSize',8);

legend('Ref. - $f_{\mathrm{c}}$=125 Hz',...
       'Ref. - $f_{\mathrm{c}}$=500 Hz',...  
       'SQAT - $f_{\mathrm{c}}$=125 Hz',...
       'SQAT - $f_{\mathrm{c}}$=500 Hz',... 
       'Location','NorthEast','Interpreter','Latex');
   
legend boxoff

axis([0 160 0 1.1]);
 ax = gca;
     set(ax,'XTick',[0 20 40 60 80 100 120 140 160]);
     set(ax,'YTick',[0 0.2 0.4 0.6 .8 1]);
     ax.XAxis.MinorTick = 'on';
     ax.XAxis.MinorTickValues =  0:10:160; 
     ax.YAxis.MinorTick = 'on';
     ax.YAxis.MinorTickValues = 0:0.1:1.1; 
     
ylabel('Roughness, $R$ (asper)','Interpreter','Latex');
xlabel('Modulation frequency, $f_{\mathrm{mod}}$ (Hz)','Interpreter','Latex');

set(gcf,'color','w');

if save_figs==1
figuresdir = [pwd '\figs\']; 
saveas(gcf,strcat(figuresdir, 'validation_roughness_fmod_125_500'), 'fig');
saveas(gcf,strcat(figuresdir, 'validation_roughness_fmod_125_500'), 'pdf');
saveas(gcf,strcat(figuresdir, 'validation_roughness_fmod_125_500'), 'png');
else
end

%% plot 2 kHz and 8 kHz
h  =figure;
set(h,'Units','Inches');
pos = get(h,'Position');
set(h,'PaperPositionMode','Auto','PaperUnits','Inches','PaperSize',[pos(3), pos(4)])

% plot reference curves

fmod=20:10:160;  % modulation freq vector for reference values 

plot(fmod,fmod_2khz,'b-*','MarkerSize',6);hold all;
plot(fmod,fmod_8khz,'k-*','MarkerSize',6);hold all;

% plot computed results
fmod_computed=0:10:160;      % modulation freq vector for reference values 

plot(fmod_computed,results_2khz,'bo:','MarkerSize',8);
plot(fmod_computed,results_8khz,'ko:','MarkerSize',8);hold all;

legend('Ref. - $f_{\mathrm{c}}$=2 kHz',...
       'Ref. - $f_{\mathrm{c}}$=8 kHz',...  
       'SQAT - $f_{\mathrm{c}}$=2 kHz',...
       'SQAT - $f_{\mathrm{c}}$=8 kHz',... 
       'Location','NorthEast','Interpreter','Latex');
   
legend boxoff

axis([0 160 0 1.1]);
 ax = gca;
     set(ax,'XTick',[0 20 40 60 80 100 120 140 160]);
     set(ax,'YTick',[0 0.2 0.4 0.6 .8 1]);
     ax.XAxis.MinorTick = 'on';
     ax.XAxis.MinorTickValues =  0:10:160; 
     ax.YAxis.MinorTick = 'on';
     ax.YAxis.MinorTickValues = 0:0.1:1.1; 
     
ylabel('Roughness, $R$ (asper)','Interpreter','Latex');
xlabel('Modulation frequency, $f_{\mathrm{mod}}$ (Hz)','Interpreter','Latex');

set(gcf,'color','w');

if save_figs==1
figuresdir = [pwd '\figs\']; 
saveas(gcf,strcat(figuresdir, 'validation_roughness_fmod_2k_8k'), 'fig');
saveas(gcf,strcat(figuresdir, 'validation_roughness_fmod_2k_8k'), 'pdf');
saveas(gcf,strcat(figuresdir, 'validation_roughness_fmod_2k_8k'), 'png');
else
end

%% plot 1 kHz
h  =figure;
set(h,'Units','Inches');
pos = get(h,'Position');
set(h,'PaperPositionMode','Auto','PaperUnits','Inches','PaperSize',[pos(3), pos(4)])

% plot reference curves

fmod=20:10:160;  % modulation freq vector for reference values 

plot(fmod,fmod_1khz,'k-*','MarkerSize',6);hold all;

% plot computed results
fmod_computed=0:10:160;      % modulation freq vector for reference values 

plot(fmod_computed,results_1khz,'ko:','MarkerSize',8);hold all;

legend('Ref. - $f_{\mathrm{c}}$=1 kHz',...
       'SQAT - $f_{\mathrm{c}}$=1 kHz',...  
       'Location','NorthEast','Interpreter','Latex');
   
legend boxoff

axis([0 160 0 1.1]);
 ax = gca;
     set(ax,'XTick',[0 20 40 60 80 100 120 140 160]);
     set(ax,'YTick',[0 0.2 0.4 0.6 .8 1]);
     ax.XAxis.MinorTick = 'on';
     ax.XAxis.MinorTickValues =  0:10:160; 
     ax.YAxis.MinorTick = 'on';
     ax.YAxis.MinorTickValues = 0:0.1:1.1; 
     
ylabel('Roughness, $R$ (asper)','Interpreter','Latex');
xlabel('Modulation frequency, $f_{\mathrm{mod}}$ (Hz)','Interpreter','Latex');

set(gcf,'color','w');

if save_figs==1
figuresdir = [pwd '\figs\']; 
saveas(gcf,strcat(figuresdir, 'validation_roughness_fmod_1k'), 'fig');
saveas(gcf,strcat(figuresdir, 'validation_roughness_fmod_1k'), 'pdf');
saveas(gcf,strcat(figuresdir, 'validation_roughness_fmod_1k'), 'png');
else
end

%% plot 250 Hz and 4 kHz
h  =figure;
set(h,'Units','Inches');
pos = get(h,'Position');
set(h,'PaperPositionMode','Auto','PaperUnits','Inches','PaperSize',[pos(3), pos(4)])

% plot reference curves

fmod_250=20:10:130;  % modulation freq vector for reference values 
fmod=20:10:160;  % modulation freq vector for reference values 


plot(fmod_250,fmod_250hz,'k-*','MarkerSize',6);hold all;
plot(fmod,fmod_4khz,'b-*','MarkerSize',6);hold all;

% plot computed results
fmod_computed=0:10:160;      % modulation freq vector for reference values 

plot(fmod_computed,results_250hz,'ko:','MarkerSize',8);hold all;
plot(fmod_computed,results_4khz,'bo:','MarkerSize',8);

legend('Ref. - $f_{\mathrm{c}}$=250 Hz',...
       'Ref. - $f_{\mathrm{c}}$=4 kHz',...  
       'SQAT - $f_{\mathrm{c}}$=250 Hz',...
       'SQAT - $f_{\mathrm{c}}$=4 kHz',... 
       'Location','NorthEast','Interpreter','Latex');
   
legend boxoff

axis([0 160 0 1.1]);
 ax = gca;
     set(ax,'XTick',[0 20 40 60 80 100 120 140 160]);
     set(ax,'YTick',[0 0.2 0.4 0.6 .8 1]);
     ax.XAxis.MinorTick = 'on';
     ax.XAxis.MinorTickValues =  0:10:160; 
     ax.YAxis.MinorTick = 'on';
     ax.YAxis.MinorTickValues = 0:0.1:1.1; 
     
ylabel('Roughness, $R$ (asper)','Interpreter','Latex');
xlabel('Modulation frequency, $f_{\mathrm{mod}}$ (Hz)','Interpreter','Latex');

set(gcf,'color','w');

if save_figs==1
figuresdir = [pwd '\figs\']; 
saveas(gcf,strcat(figuresdir, 'validation_roughness_fmod_250_4k'), 'fig');
saveas(gcf,strcat(figuresdir, 'validation_roughness_fmod_250_4k'), 'pdf');
saveas(gcf,strcat(figuresdir, 'validation_roughness_fmod_250_4k'), 'png');
else
end


